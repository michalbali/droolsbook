<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:drools="http://drools.org/schema/drools-spring"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://drools.org/schema/drools-spring http://drools.org/schema/drools-spring.xsd">

<bean id="transactionManager" 
  class="org.springframework.orm.jpa.JpaTransactionManager">
  <property name="entityManagerFactory" 
    ref="entityManagerFactory" />
</bean>

<aop:config>
  <aop:pointcut id="bankingServiceMethods"
    expression="execution(*
    droolsbook.bank.service.BankingService.*(..))" />
  <aop:pointcut id="localTaskServiceMethods"
    expression="execution(* 
    org.jbpm.task.TaskService.*(..))" />
    
  <aop:advisor advice-ref="transactionAdvice"
    pointcut-ref="bankingServiceMethods" />
  <aop:advisor advice-ref="transactionAdvice"
    pointcut-ref="localTaskServiceMethods" />
</aop:config>

<tx:advice id="transactionAdvice" 
  transaction-manager="transactionManager">    
  <tx:attributes>
    <tx:method name="*" rollback-for="Exception" />
  </tx:attributes>
</tx:advice>

 
<bean id="entityManagerFactory"
  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
  <property name="dataSource" ref="dataSource" />
  <property name="persistenceUnitName"
    value="droolsbook.persistence" />
  <property name="jpaPropertyMap" ref="jpaPropertyMap" />
</bean>

<bean id="jpaPropertyMap" class="org.springframework.beans.factory.config.MapFactoryBean">
  <property name="sourceMap">
    <map>
      <entry key="hibernate.dialect" 
        value="org.hibernate.dialect.H2Dialect" />
      <entry key="hibernate.show_sql" value="true" />
      <entry key="hibernate.format_sql" value="true" />
      <entry key="hibernate.use_sql_comments" value="true"/>
      <entry key="hibernate.hbm2ddl.auto" 
        value="create-drop" />
    </map>
  </property>
</bean>

  <!-- If you need a "real" connection pool outside of a J2EE container, consider Apache's Jakarta Commons DBCP or C3P0. -->
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName" value="org.h2.Driver" />
  <!-- <property name="url" value="jdbc:h2:mem:droolsBookDatabaseH2" /> -->
  <property name="url" value="jdbc:h2:droolsBookDatabaseH2" />
  <property name="username" value="sa" />
  <property name="password" value="sasa" />
</bean>
  
<bean id="knowledgeSessionTemplate" init-method="init"
  class="droolsbook.org.drools.persistence.JPAKnowledgeSessionTemplate" > 
  <property name="knowledgeBase" ref="loanApprovalKnowledge"/>
  <property name="emailHandler" ref="emailWorkItemHandler"/>
  <property name="transferFundsHandler" 
    ref="transferFundsWorkItemHandler"/>
  <property name="transactionManager" 
    ref="transactionManager" />
  <property name="taskService" ref="localTaskService" />
</bean>

  <bean name="emailWorkItemHandler" class="org.jbpm.process.instance.impl.demo.SystemOutWorkItemHandler" />
  <bean name="transferFundsWorkItemHandler" class="org.jbpm.process.instance.impl.demo.SystemOutWorkItemHandler" />




<bean id="localTaskService" 
  class="org.jbpm.task.service.local.LocalTaskService" 
  depends-on="springTaskSessionFactory" >
  <constructor-arg ref="taskService" />
</bean>

<bean id="taskService" 
  class="org.jbpm.task.service.TaskService" >
  <property name="systemEventListener" >
    <bean class="org.drools.SystemEventListenerFactory" 
      factory-method="getSystemEventListener" />
  </property>
</bean>

<bean id="springTaskSessionFactory" class="org.jbpm.task.service.persistence.TaskSessionSpringFactoryImpl"
      init-method="initialize" depends-on="taskService" >
  <property name="entityManager" >
    <bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
      <property name="entityManagerFactory" 
        ref="entityManagerFactory"/>
    </bean>
  </property>
  <property name="transactionManager" >
    <bean class="org.drools.container.spring.beans.persistence.HumanTaskSpringTransactionManager">
      <constructor-arg ref="transactionManager" />
    </bean>
  </property>
  <property name="useJTA" value="false" />
  <property name="taskService" ref="taskService" />
</bean> 
  <!-- if using the SharedEntityManagerBean, make sure to enable nested transactions -->
  



<bean name="bankingFactory" 
  class="droolsbook.bank.model.DefaultBankingFactory" />
<bean name="reportFactory"
  class="droolsbook.bank.service.impl.DefaultReportFactory" />

<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
<bean name="customerRepository"
  class="droolsbook.sampleApplication.repository.jpa.JPACustomerRepository" />


<drools:kbase id="validationKnowledge">
  <drools:resources>
    <drools:resource type="DRL" 
      source="classpath:validation.drl" />
  </drools:resources>
</drools:kbase>

  <drools:kbase id="loanApprovalKnowledge">
      <drools:resources>
      <drools:resource type="DRL" source="classpath:loanApproval.drl" />
      <drools:resource type="BPMN2" source="classpath:loanApproval.bpmn" />
      <drools:resource type="DRL" source="classpath:ratingCalculation.drl" />
      <drools:resource type="BPMN2" source="classpath:ratingCalculation.bpmn" />
    </drools:resources>
  </drools:kbase>


<bean name="validationService"
  class="droolsbook.bank.service.impl.BankingValidationServiceImpl">
  <property name="reportFactory" ref="reportFactory" />
  <property name="knowledgeBase" ref="validationKnowledge"/>
</bean>

<bean name="loanApprovalService"
 class="droolsbook.bank.service.impl.LoanApprovalServiceImpl">
 <property name="sessionTemplate" ref="knowledgeSessionTemplate"/>
 <property name="localTaskService" ref="localTaskService"/>
</bean>
  
  <bean name="cepService" class="droolsbook.bank.service.impl.CEPServiceImpl">
    
  </bean>


<bean name="bankingService"
  class="droolsbook.bank.service.impl.BankingServiceImpl">
  <property name="customerRepository" 
    ref="customerRepository" />
  <property name="validationService" 
    ref="validationService" />
  <property name="loanApprovalService" 
    ref="loanApprovalService" />
  <property name="cepService" ref="cepService" />  
</bean>

</beans>